# Generated by Django 4.1.3 on 2023-01-29 17:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Auditorium",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=5, verbose_name="Номер")),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("update_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Аудитория",
                "verbose_name_plural": "Аудитории",
            },
        ),
        migrations.CreateModel(
            name="ClassTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time_start", models.TimeField(verbose_name="Время начала занятия")),
                ("time_end", models.TimeField(verbose_name="Время окончания занятия")),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("changed_at", models.DateTimeField(auto_now=True)),
                (
                    "number_lesson",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Номер урока"
                    ),
                ),
            ],
            options={
                "verbose_name": "Время занятия",
                "verbose_name_plural": "Время занятий",
            },
        ),
        migrations.CreateModel(
            name="Discount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, verbose_name="Название")),
                (
                    "discount_amount",
                    models.PositiveIntegerField(verbose_name="Размер %"),
                ),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Льгота",
                "verbose_name_plural": "Льготы",
            },
        ),
        migrations.CreateModel(
            name="Grouping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Название группы"
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("max_students", models.PositiveIntegerField(blank=True, null=True)),
                ("min_students", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("kaz", "қазақша"), ("rus", "орыс")],
                        max_length=20,
                        null=True,
                        verbose_name="Язык обучения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа обучения",
                "verbose_name_plural": "Группы обучения",
            },
        ),
        migrations.CreateModel(
            name="Packet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Название"
                    ),
                ),
                (
                    "qty",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Количество"
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "sum",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Сумма"
                    ),
                ),
            ],
            options={
                "verbose_name": "Пакет предметов",
                "verbose_name_plural": "Пакеты предметов",
            },
        ),
        migrations.CreateModel(
            name="StatusOfGrouping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Название"
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Доступный статус группы",
                "verbose_name_plural": "Доступные статусы групп",
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Название"
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Предмет",
                "verbose_name_plural": "Предметы",
            },
        ),
        migrations.CreateModel(
            name="TeacherGrouping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "started_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Начал преподавать"
                    ),
                ),
                (
                    "finished_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Закончил преподавать"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "grouping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_groupings",
                        to="education.grouping",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_groupings",
                        to="accounts.teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "Преподаватель группы",
                "verbose_name_plural": "Преподаватели групп",
            },
        ),
        migrations.CreateModel(
            name="StudentGrouping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enrolled_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата зачисления"
                    ),
                ),
                (
                    "expelled_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата отчисления"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Студент в группе"),
                ),
                (
                    "grouping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_grouping",
                        to="education.grouping",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_grouping",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Студент в группе",
                "verbose_name_plural": "Студенты в группе",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "week_day",
                    models.CharField(
                        choices=[
                            ("monday", "Дүйсенбі"),
                            ("tuesday", "Сейсенбі"),
                            ("wednesday", "Сәрсенбі"),
                            ("thursday", "Бейсенбі"),
                            ("friday", "Жұма"),
                            ("saturday", "Сенбі"),
                            ("sunday", "Жексенбі"),
                        ],
                        max_length=15,
                        verbose_name="День недели",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("changed_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "auditorium",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="education.auditorium",
                        verbose_name="Номер аудитории",
                    ),
                ),
                (
                    "class_time",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="education.classtime",
                        verbose_name="Номер урока",
                    ),
                ),
                (
                    "grouping",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="education.grouping",
                        verbose_name="Группа",
                    ),
                ),
            ],
            options={
                "verbose_name": "Расписание",
                "verbose_name_plural": "Расписания",
            },
        ),
        migrations.CreateModel(
            name="GroupingStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "note",
                    models.TextField(
                        blank=True, max_length=150, verbose_name="Примечание"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "grouping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grouping_statuses",
                        to="education.grouping",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="education.statusofgrouping",
                    ),
                ),
            ],
            options={
                "verbose_name": "Установленный статус группы",
                "verbose_name_plural": "Установленные статусы групп",
                "get_latest_by": "created_at",
            },
        ),
        migrations.AddField(
            model_name="grouping",
            name="statuses",
            field=models.ManyToManyField(
                related_name="groupings",
                through="education.GroupingStatus",
                to="education.statusofgrouping",
                verbose_name="Статус группы",
            ),
        ),
        migrations.AddField(
            model_name="grouping",
            name="students",
            field=models.ManyToManyField(
                related_name="study_groupings",
                through="education.StudentGrouping",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Студенты",
            ),
        ),
        migrations.AddField(
            model_name="grouping",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="groupings",
                to="education.subject",
                verbose_name="Название предмета",
            ),
        ),
        migrations.AddField(
            model_name="grouping",
            name="teachers",
            field=models.ManyToManyField(
                related_name="teach_groupings",
                through="education.TeacherGrouping",
                to="accounts.teacher",
                verbose_name="Преподаватели",
            ),
        ),
    ]
